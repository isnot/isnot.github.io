[{"raw":"---\ntitle: hexo-tag-google-photos-album をアップデートした\ncategories: hexo\ndate: 2019-06-08 14:40:03\ntags: [hexo, javascript, npm]\n---\n\n## metascraperにおけるXSS対応と、その影響\n\n自作のHexo向けプラグインであるhexo-tag-google-photos-albumでは、[metascraper](https://metascraper.js.org/#/)というnpmライブラリを利用しています。\nGoogle Photosの共有リンクから辿って、いくつかのメタデータを抽出するためです。\n\nそのmetascraperで、XSS脆弱性の報告がありました。（現時点では修正対応済）\n\nその解決に伴い、hexo-tag-google-photos-albumでは、修正済みバージョンを利用するように、修正をしました。\n\n- metascraperのGitHubリポジトリにおけるイシュー\n  - NPM Reporting as CSS Vulnerability [#153](https://github.com/microlinkhq/metascraper/issues/153)\n  - Add escape parameter to escape html data by default [#168](https://github.com/microlinkhq/metascraper/issues/168)\n- npmのセキュリティ勧告\n  - [Cross-Site Scripting metascraper](https://www.npmjs.com/advisories/603)\n- 報告の元になったレポート\n  - [metascraper] Stored XSS in Open Graph meta properties read by metascrapper [hackerone.com #309367](https://hackerone.com/reports/309367)\n- isnot/hexo-tag-google-photos-album 修正の差分\n  - metascraper up to @5.4.2 [#02366cc](https://github.com/isnot/hexo-tag-google-photos-album/commit/02366cc046ccd932cdca89d2562f4ae5dd60adf4#diff-b9cfc7f2cdf78a7f4b91a753d10865a2)\n\n## 修正後の確認\n\n```bash\nhexo-tag-google-photos-album$ npm audit\n\n                       === npm audit security report ===\n\nfound 0 vulnerabilities\n in 2702 scanned packages\n\n(snip)\n\nblog$ npm view hexo-tag-google-photos-album version\n1.0.5\nblog$ hexo clean\n(node:29044) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.\nINFO  Deleted database.\nINFO  Deleted public folder.\n```\n\n特に問題なし。\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><h2 id=\"metascraperにおけるXSS対応と、その影響\"><a href=\"#metascraperにおけるXSS対応と、その影響\" class=\"headerlink\" title=\"metascraperにおけるXSS対応と、その影響\"></a>metascraperにおけるXSS対応と、その影響</h2><p>自作のHexo向けプラグインであるhexo-tag-google-photos-albumでは、<a href=\"https://metascraper.js.org/#/\" target=\"_blank\" rel=\"noopener\">metascraper</a>というnpmライブラリを利用しています。<br>Google Photosの共有リンクから辿って、いくつかのメタデータを抽出するためです。</p>\n<p>そのmetascraperで、XSS脆弱性の報告がありました。（現時点では修正対応済）</p>\n<p>その解決に伴い、hexo-tag-google-photos-albumでは、修正済みバージョンを利用するように、修正をしました。</p>\n<ul>\n<li>metascraperのGitHubリポジトリにおけるイシュー<ul>\n<li>NPM Reporting as CSS Vulnerability <a href=\"https://github.com/microlinkhq/metascraper/issues/153\" target=\"_blank\" rel=\"noopener\">#153</a></li>\n<li>Add escape parameter to escape html data by default <a href=\"https://github.com/microlinkhq/metascraper/issues/168\" target=\"_blank\" rel=\"noopener\">#168</a></li>\n</ul>\n</li>\n<li>npmのセキュリティ勧告<ul>\n<li><a href=\"https://www.npmjs.com/advisories/603\" target=\"_blank\" rel=\"noopener\">Cross-Site Scripting metascraper</a></li>\n</ul>\n</li>\n<li>報告の元になったレポート<ul>\n<li>[metascraper] Stored XSS in Open Graph meta properties read by metascrapper <a href=\"https://hackerone.com/reports/309367\" target=\"_blank\" rel=\"noopener\">hackerone.com #309367</a></li>\n</ul>\n</li>\n<li>isnot/hexo-tag-google-photos-album 修正の差分<ul>\n<li>metascraper up to @5.4.2 <a href=\"https://github.com/isnot/hexo-tag-google-photos-album/commit/02366cc046ccd932cdca89d2562f4ae5dd60adf4#diff-b9cfc7f2cdf78a7f4b91a753d10865a2\" target=\"_blank\" rel=\"noopener\">#02366cc</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"修正後の確認\"><a href=\"#修正後の確認\" class=\"headerlink\" title=\"修正後の確認\"></a>修正後の確認</h2><figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">hexo-tag-google-photos-album$ npm audit</span><br><span class=\"line\"></span><br><span class=\"line\">                       === npm audit security report ===</span><br><span class=\"line\"></span><br><span class=\"line\">found 0 vulnerabilities</span><br><span class=\"line\"> <span class=\"keyword\">in</span> 2702 scanned packages</span><br><span class=\"line\"></span><br><span class=\"line\">(snip)</span><br><span class=\"line\"></span><br><span class=\"line\">blog$ npm view hexo-tag-google-photos-album version</span><br><span class=\"line\">1.0.5</span><br><span class=\"line\">blog$ hexo clean</span><br><span class=\"line\">(node:29044) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class=\"line\">INFO  Deleted database.</span><br><span class=\"line\">INFO  Deleted public folder.</span><br></pre></td></tr></tbody></table></figure>\n\n<p>特に問題なし。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"hexo-tag-google-photos-album をアップデートした","slug":"update-hexo-tag-gpa","date":"2019-06-08T05:40:03.000Z","updated":"2019-06-08T06:37:43.206Z","comments":true,"path":"2019-06/08-update-hexo-tag-gpa/","link":"","permalink":"https://pages.isnot.jp/2019-06/08-update-hexo-tag-gpa/","excerpt":"","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"npm","slug":"npm","permalink":"https://pages.isnot.jp/tags/npm/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]},{"raw":"---\ntitle: \"東京都庁展望室\"\ncategories: photo\ndate: 2019-05-30 09:35:00\ntags: [photo, skyscraper]\n---\n\n{% googlePhotosAlbum https://photos.app.goo.gl/YyQWnVUPjaQL9UiJ6 %}\n\n東京都庁 [展望室のご利用案内](http://www.yokoso.metro.tokyo.jp/tenbou/index.html)\n\nよく訪れている北展望室（半分がカフェ＆レストランになっている方）が、来年1月まで改装工事中だそうで、珍しく南展望室でした。\n南は、エレベーターのある側を除いたほぼ全周が見えるのが良いですね。\n\n今回はあまり良い写真が撮れませんでした。\nせっかく夕暮れ時だったのに、ちょうど日が落ちる間合いに、ボサッとして他のことに気を取られていたのが敗因。\nあとは言い訳ですが、地平線付近の透明度があまり良くなかったのと、雲の具合があまり好みの感じでもなかったな😰。\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\">\n\n<p>東京都庁 <a href=\"http://www.yokoso.metro.tokyo.jp/tenbou/index.html\" target=\"_blank\" rel=\"noopener\">展望室のご利用案内</a></p>\n<p>よく訪れている北展望室（半分がカフェ＆レストランになっている方）が、来年1月まで改装工事中だそうで、珍しく南展望室でした。<br>南は、エレベーターのある側を除いたほぼ全周が見えるのが良いですね。</p>\n<p>今回はあまり良い写真が撮れませんでした。<br>せっかく夕暮れ時だったのに、ちょうど日が落ちる間合いに、ボサッとして他のことに気を取られていたのが敗因。<br>あとは言い訳ですが、地平線付近の透明度があまり良くなかったのと、雲の具合があまり好みの感じでもなかったな😰。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"東京都庁展望室","slug":"TMG-Observatories","date":"2019-05-30T00:35:00.000Z","updated":"2019-05-30T00:49:41.017Z","comments":true,"path":"2019-05/30-TMG-Observatories/","link":"","permalink":"https://pages.isnot.jp/2019-05/30-TMG-Observatories/","excerpt":"","categories":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/categories/photo/"}],"tags":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/tags/photo/"},{"name":"skyscraper","slug":"skyscraper","permalink":"https://pages.isnot.jp/tags/skyscraper/"}]},{"raw":"---\ntitle: 四季の香ローズガーデン2019\ncategories: photo\ndate: 2019-05-30 09:05:54\ntags: [photo, rose]\n---\n\n{% googlePhotosAlbum https://photos.app.goo.gl/6SaCYcYsVo1ju4RB8 %}\n\n練馬区、光が丘付近の四季の香公園内にある薔薇園。\n雨上がりの朝を狙って、開園時間に合わせて行ってきました。\nあざといほどの水滴は、狙ってのことです😁。\n\n時折、むせ返る程と言うと言い過ぎですが、ハッとするような香りに包まれます。\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\">\n\n<p>練馬区、光が丘付近の四季の香公園内にある薔薇園。<br>雨上がりの朝を狙って、開園時間に合わせて行ってきました。<br>あざといほどの水滴は、狙ってのことです😁。</p>\n<p>時折、むせ返る程と言うと言い過ぎですが、ハッとするような香りに包まれます。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"四季の香ローズガーデン2019","slug":"shikinokaori-rose-garden","date":"2019-05-30T00:05:54.000Z","updated":"2019-05-30T00:11:21.406Z","comments":true,"path":"2019-05/30-shikinokaori-rose-garden/","link":"","permalink":"https://pages.isnot.jp/2019-05/30-shikinokaori-rose-garden/","excerpt":"","categories":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/categories/photo/"}],"tags":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/tags/photo/"},{"name":"rose","slug":"rose","permalink":"https://pages.isnot.jp/tags/rose/"}]},{"raw":"---\ntitle: 保谷町ローズガーデン2019\ncategories: photo\ndate: 2019-05-26 06:54:46\ntags: [photo, rose]\n---\n\n{% googlePhotosAlbum https://photos.app.goo.gl/hcTmPQj1LahtHKpc7 %}\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\">\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"保谷町ローズガーデン2019","slug":"hoya-rose-garden","date":"2019-05-25T21:54:46.000Z","updated":"2019-05-30T00:05:26.430Z","comments":true,"path":"2019-05/26-hoya-rose-garden/","link":"","permalink":"https://pages.isnot.jp/2019-05/26-hoya-rose-garden/","excerpt":"","categories":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/categories/photo/"}],"tags":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/tags/photo/"},{"name":"rose","slug":"rose","permalink":"https://pages.isnot.jp/tags/rose/"}]},{"raw":"---\ntitle: Hexo 内部探訪 (6) DevToolsを使ったデバッグ\ncategories: hexo\ndate: 2019-05-06 23:08:08\ntags: [hexo, javascript]\n---\n\n恥ずかしながらデバッカーを使い慣れておらず、こういった実行時コンテキストの解析に、手間取っていました。\n今回は、DevToolsプロトコルを使って解析してみよう。\n\n<!-- more -->\n\n```bash\n$ cd &lt;path-to-your-blog-dir&gt;\n$ hexo clean\n$ node --inspect-brk node_modules/hexo-cli/bin/hexo g --debug\n```\n\nこのようにinspectを有効化してから、ブラウザ（Chromiumを利用）で`chrome://inspect`を開き、`Remote Target`の中に現れる`inspect this`から、デバッカーを開始する。\n\nこれだと、デバッカーに馴れていない私にとっては、見たいところにたどり着くまでに手間取ってしまった。\n\nそこで、自身で開発中のプラグインの中に、任意のブレークポイントをあらかじめ挿入してしまう。\n\n```javascript\n  debugger;\n````\n\nそして\n\n```bash\n$ node --inspect node_modules/hexo-cli/bin/hexo g --debug\n```\n\n**-brk** の有無が異なる点に注意。\n\nこれで、ようやく調査がやりやすくなりました。\nデバッカーの使い方は、これが詳しい。\n\n[コードをステップ実行する方法 | Tools for Web Developers | Google Developers](https://developers.google.com/web/tools/chrome-devtools/javascript/step-code?hl=ja)\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><p>恥ずかしながらデバッカーを使い慣れておらず、こういった実行時コンテキストの解析に、手間取っていました。<br>今回は、DevToolsプロトコルを使って解析してみよう。</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;path-to-your-blog-dir&gt;</span><br><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ node --inspect-brk node_modules/hexo-cli/bin/hexo g --debug</span><br></pre></td></tr></tbody></table></figure>\n\n<p>このようにinspectを有効化してから、ブラウザ（Chromiumを利用）で<code>chrome://inspect</code>を開き、<code>Remote Target</code>の中に現れる<code>inspect this</code>から、デバッカーを開始する。</p>\n<p>これだと、デバッカーに馴れていない私にとっては、見たいところにたどり着くまでに手間取ってしまった。</p>\n<p>そこで、自身で開発中のプラグインの中に、任意のブレークポイントをあらかじめ挿入してしまう。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">debugger</span>;</span><br><span class=\"line\"><span class=\"string\">`</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>そして</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">$ node --inspect node_modules/hexo-cli/bin/hexo g --debug</span><br></pre></td></tr></tbody></table></figure>\n\n<p><strong>-brk</strong> の有無が異なる点に注意。</p>\n<p>これで、ようやく調査がやりやすくなりました。<br>デバッカーの使い方は、これが詳しい。</p>\n<p><a href=\"https://developers.google.com/web/tools/chrome-devtools/javascript/step-code?hl=ja\" target=\"_blank\" rel=\"noopener\">コードをステップ実行する方法 | Tools for Web Developers | Google Developers</a></p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"Hexo 内部探訪 (6) DevToolsを使ったデバッグ","slug":"study-about-hexos-internals-6","date":"2019-05-06T14:08:08.000Z","updated":"2019-05-06T14:11:11.564Z","comments":true,"path":"2019-05/06-study-about-hexos-internals-6/","link":"","permalink":"https://pages.isnot.jp/2019-05/06-study-about-hexos-internals-6/","excerpt":"<div class=\"article-gallery\"><p>恥ずかしながらデバッカーを使い慣れておらず、こういった実行時コンテキストの解析に、手間取っていました。<br>今回は、DevToolsプロトコルを使って解析してみよう。</p></div>","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]}]