[{"raw":"---\ntitle: Hexo 内部探訪 (4) プラグインのロード\ncategories: hexo\ndate: 2019-05-06 03:36:30\ntags: [hexo, javascript]\n---\n\n[hexo/lib/hexo/load_plugins.js](https://github.com/hexojs/hexo/blob/master/lib/hexo/load_plugins.js)に書いてある。\n\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><p><a href=\"https://github.com/hexojs/hexo/blob/master/lib/hexo/load_plugins.js\" target=\"_blank\" rel=\"noopener\">hexo/lib/hexo/load_plugins.js</a>に書いてある。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"Hexo 内部探訪 (4) プラグインのロード","slug":"study-about-hexos-internals-4","date":"2019-05-05T18:36:30.000Z","updated":"2019-05-05T18:48:34.212Z","comments":true,"path":"2019-05/06-study-about-hexos-internals-4/","link":"","permalink":"https://pages.isnot.jp/2019-05/06-study-about-hexos-internals-4/","excerpt":"","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]},{"raw":"---\ntitle: Hexo 内部探訪 (3) グローバル\ncategories: hexo\ndate: 2019-05-06 00:03:00\ntags: [hexo, javascript]\n---\n\nプラグイン（さしあたりTagプラグインを想定）の中で参照できる、グローバルな変数やオブジェクトを調べてまとめよう。\n\nNode.jsでは、グローバルな空間を参照するためのキーワードがある。\n`global`である。\n\nまた、次のようなやり方で参照する方法もあるようだ。\n\n```javascript\nconst { inspect } = require('util');\nvar g = Function('return this')();\nconsole.log(inspect(g, { depth: 2 }));\n```\n\nこれらを駆使しつつ、Hexoの場合には、私が見たところほとんど全ての場所で、`hexo`というグローバル変数が見えるので、これを足がかりにしたい。\nまた、他にも使える要素がもしあるなら、確かめたい。\n\n[ドキュメント | Node.js](https://nodejs.org/ja/docs/)、 [Process](https://nodejs.org/api/process.html) 等もためになる。\n\n（調査中）\n\nHexoオブジェクト\n```json\n{\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  base_dir: '/home/naoto/www/MyBlog/',\n  public_dir: '/home/naoto/www/MyBlog/public/',\n  source_dir: '/home/naoto/www/MyBlog/source/',\n  plugin_dir: '/home/naoto/www/MyBlog/node_modules/',\n  script_dir: '/home/naoto/www/MyBlog/scripts/',\n  scaffold_dir: '/home/naoto/www/MyBlog/scaffolds/',\n  theme_dir: '/home/naoto/www/MyBlog/themes/stage/',\n  theme_script_dir: '/home/naoto/www/MyBlog/themes/stage/scripts/',\n  env: [Object],\n  extend: [Object],\n  config: [Object],\n  log: [Logger],\n  render: [Render],\n  route: [Router],\n  post: [Post],\n  scaffold: [Scaffold],\n  _dbLoaded: true,\n  _isGenerating: true,\n  database: [Database],\n  config_path: '/home/naoto/www/MyBlog/_config.yml',\n  source: [Source],\n  theme: [Theme],\n  locals: [Locals]\n}\n```\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><p>プラグイン（さしあたりTagプラグインを想定）の中で参照できる、グローバルな変数やオブジェクトを調べてまとめよう。</p>\n<p>Node.jsでは、グローバルな空間を参照するためのキーワードがある。<br><code>global</code>である。</p>\n<p>また、次のようなやり方で参照する方法もあるようだ。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> { inspect } = <span class=\"built_in\">require</span>(<span class=\"string\">'util'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"built_in\">Function</span>(<span class=\"string\">'return this'</span>)();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inspect(g, { <span class=\"attr\">depth</span>: <span class=\"number\">2</span> }));</span><br></pre></td></tr></tbody></table></figure>\n<p>これらを駆使しつつ、Hexoの場合には、私が見たところほとんど全ての場所で、<code>hexo</code>というグローバル変数が見えるので、これを足がかりにしたい。<br>また、他にも使える要素がもしあるなら、確かめたい。</p>\n<p><a href=\"https://nodejs.org/ja/docs/\" target=\"_blank\" rel=\"noopener\">ドキュメント | Node.js</a>、 <a href=\"https://nodejs.org/api/process.html\" target=\"_blank\" rel=\"noopener\">Process</a> 等もためになる。</p>\n<p>（調査中）</p>\n<p>Hexoオブジェクト<br></p><figure class=\"highlight\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  _events: [Object: null prototype] {},</span><br><span class=\"line\">  _eventsCount: 0,</span><br><span class=\"line\">  _maxListeners: undefined,</span><br><span class=\"line\">  base_dir: '/home/naoto/www/MyBlog/',</span><br><span class=\"line\">  public_dir: '/home/naoto/www/MyBlog/public/',</span><br><span class=\"line\">  source_dir: '/home/naoto/www/MyBlog/source/',</span><br><span class=\"line\">  plugin_dir: '/home/naoto/www/MyBlog/node_modules/',</span><br><span class=\"line\">  script_dir: '/home/naoto/www/MyBlog/scripts/',</span><br><span class=\"line\">  scaffold_dir: '/home/naoto/www/MyBlog/scaffolds/',</span><br><span class=\"line\">  theme_dir: '/home/naoto/www/MyBlog/themes/stage/',</span><br><span class=\"line\">  theme_script_dir: '/home/naoto/www/MyBlog/themes/stage/scripts/',</span><br><span class=\"line\">  env: [Object],</span><br><span class=\"line\">  extend: [Object],</span><br><span class=\"line\">  config: [Object],</span><br><span class=\"line\">  log: [Logger],</span><br><span class=\"line\">  render: [Render],</span><br><span class=\"line\">  route: [Router],</span><br><span class=\"line\">  post: [Post],</span><br><span class=\"line\">  scaffold: [Scaffold],</span><br><span class=\"line\">  _dbLoaded: true,</span><br><span class=\"line\">  _isGenerating: true,</span><br><span class=\"line\">  database: [Database],</span><br><span class=\"line\">  config_path: '/home/naoto/www/MyBlog/_config.yml',</span><br><span class=\"line\">  source: [Source],</span><br><span class=\"line\">  theme: [Theme],</span><br><span class=\"line\">  locals: [Locals]</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure><p></p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"Hexo 内部探訪 (3) グローバル","slug":"study-about-hexos-internals-3","date":"2019-05-05T15:03:00.000Z","updated":"2019-05-05T18:43:42.879Z","comments":true,"path":"2019-05/06-study-about-hexos-internals-3/","link":"","permalink":"https://pages.isnot.jp/2019-05/06-study-about-hexos-internals-3/","excerpt":"","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]},{"raw":"---\ntitle: Hexo 内部探訪 (2) 準備 npm linkメモ\ncategories: hexo\ndate: 2019-05-06 00:02:00\ntags: [hexo, javascript, npm]\n---\n\n## npm linkを使いこなすには\n\n[npm link](https://docs.npmjs.com/cli/link.html)という、ありがたい仕組みがあって、非公開のモジュール（または開発中のバージョン）を、node_modulesの中に配置することができる。\n基本的には、シンボリック・リンクである。\n\nここまでは、すぐに把握できたけど、実はうまく動作させるための、さらなる条件があった。\n\n<!-- more -->\n\nモジュールを読み込む側と、読み込まれる側のモジュールが、ファイルシステム上で同階層になるように配置されている必要があるのだった。\n\n私の場合だけど、開発中のリポジトリは、ある場所にまとめてある。\n例：`~/repository/hexo-tag-google-photos-album/`\nこれが、Hexoプラグインを開発する場所。\n\n一方で、ただ使うだけのものは、別の場所にある。\nHexoで構成しているブログの作業場所は、こんな感じ。\n例：`~/www/MyBlog/`\n\nつまり、自分のブログに自分のプラグインを組み込むとすると、\n例：`~/www/MyBlog/node_modules/hexo-tag-google-photos-album/`\nということになる。\n\nしかしながら、npm link的には、上記の2箇所を直接リンクすることはできないわけだ。\n\nなので、さらに回りくどいが、以下のようにして、解決してみる。\n\n```bash\nnaoto@MyComputer:~/www/MyBlog$ cd ..\nnaoto@MyComputer:~/www$ ln -s ../repository/hexo-tag-google-photos-album\nnaoto@MyComputer:~/www$ ls -l hexo-tag-google-photos-album\nlrwxrwxrwx 1 naoto naoto 42  5月  6 01:46 hexo-tag-google-photos-album -> ../repository/hexo-tag-google-photos-album\n```\n\nこうすることで、開発中のプラグイン実体は従来通りのままとしつつ、link可能な場所にも配置できた。\n\n\n呼び出される側のlinkは、以下の通り。\n\n```bash\nnaoto@MyComputer:~/www$ cd hexo-tag-google-photos-album\nnaoto@MyComputer:~/www/hexo-tag-google-photos-album$ sudo npm link\n(snip)\n/usr/lib/node_modules/hexo-tag-google-photos-album -> /home/naoto/repository/hexo-tag-google-photos-album\n```\n\nそして、呼び出す方で使う側の、つまりブログ側の（しつこい）linkはこの通り。\n\n```bash\nnaoto@MyComputer:~/www/hexo-tag-google-photos-album$ cd ../MyBlog\nnaoto@MyComputer:~/www/MyBlog$ npm link hexo-tag-google-photos-album\n/home/naoto/www/MyBlog/node_modules/hexo-tag-google-photos-album -> /usr/lib/node_modules/hexo-tag-google-photos-album -> /home/naoto/repository/hexo-tag-google-photos-album\nnaoto@MyComputer:~/www/MyBlog$ grep photos package.json\n    \"hexo-tag-google-photos-album\": \"git+https://github.com/isnot/hexo-tag-google-photos-album.git\",\nnaoto@MyComputer:~/www/MyBlog$ ls -l node_modules/hexo-tag-google-photos-album\nlrwxrwxrwx 1 naoto naoto 64  5月  6 01:50 node_modules/hexo-tag-google-photos-album -> ../../../../../usr/lib/node_modules/hexo-tag-google-photos-album\n```\n\nこれで、毎度git pushとnpm upを繰り返すこと無く、作業ができるようになる（はず）。\n確かめてみよう。\n\n開発中のプラグインの中に、以下を書き加える。\n\n```javascript　~/repository/hexo-tag-google-photos-album/index.js\nconst { inspect } = require('util');\nvar g = Function('return this')();\nconsole.log(inspect(g, { depth: 0 }));\nconsole.log(inspect(hexo, { depth: 0 }));\n```\n\nこれを、コミットもせず、コピーもせず、動かしたい。\n\n```bash\nnaoto@MyComputer:~/www/MyBlog$ hexo list page\nObject [global] {\n  global: [Circular],\n  process: [process],\n  Buffer: [Function],\n  clearImmediate: [Function: clearImmediate],\n  clearInterval: [Function: clearInterval],\n  clearTimeout: [Function: clearTimeout],\n  setImmediate: [Function],\n  setInterval: [Function: setInterval],\n  setTimeout: [Function] }\nHexo {\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  base_dir: '/home/naoto/www/MyBlog/',\n  public_dir: '/home/naoto/www/MyBlog/public/',\n  source_dir: '/home/naoto/www/MyBlog/source/',\n  plugin_dir: '/home/naoto/www/MyBlog/node_modules/',\n  script_dir: '/home/naoto/www/MyBlog/scripts/',\n  scaffold_dir: '/home/naoto/www/MyBlog/scaffolds/',\n  theme_dir: '/home/naoto/www/MyBlog/themes/stage/',\n  theme_script_dir: '/home/naoto/www/MyBlog/themes/stage/scripts/',\n  env: [Object],\n  extend: [Object],\n  config: [Object],\n  log: [Logger],\n  render: [Render],\n  route: [Router],\n  post: [Post],\n  scaffold: [Scaffold],\n  _dbLoaded: false,\n  _isGenerating: false,\n  database: [Database],\n  config_path: '/home/naoto/www/MyBlog/_config.yml',\n  source: [Source],\n  theme: [Theme],\n  locals: [Locals] }\nINFO  Start processing\nINFO  ---- START COPYING TAG CLOUD FILES ----\nINFO  ---- END COPYING TAG CLOUD FILES ----\nDate        Title                          Path\n2019-04-09  Tags                           tags/index.md\n2019-04-13  About いしだなおと / isnot N3  about/index.md\n```\n\nできた！\n\nいいね。これで行こう。\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><h2 id=\"npm-linkを使いこなすには\"><a href=\"#npm-linkを使いこなすには\" class=\"headerlink\" title=\"npm linkを使いこなすには\"></a>npm linkを使いこなすには</h2><p><a href=\"https://docs.npmjs.com/cli/link.html\" target=\"_blank\" rel=\"noopener\">npm link</a>という、ありがたい仕組みがあって、非公開のモジュール（または開発中のバージョン）を、node_modulesの中に配置することができる。<br>基本的には、シンボリック・リンクである。</p>\n<p>ここまでは、すぐに把握できたけど、実はうまく動作させるための、さらなる条件があった。</p>\n<a id=\"more\"></a>\n<p>モジュールを読み込む側と、読み込まれる側のモジュールが、ファイルシステム上で同階層になるように配置されている必要があるのだった。</p>\n<p>私の場合だけど、開発中のリポジトリは、ある場所にまとめてある。<br>例：<code>~/repository/hexo-tag-google-photos-album/</code><br>これが、Hexoプラグインを開発する場所。</p>\n<p>一方で、ただ使うだけのものは、別の場所にある。<br>Hexoで構成しているブログの作業場所は、こんな感じ。<br>例：<code>~/www/MyBlog/</code></p>\n<p>つまり、自分のブログに自分のプラグインを組み込むとすると、<br>例：<code>~/www/MyBlog/node_modules/hexo-tag-google-photos-album/</code><br>ということになる。</p>\n<p>しかしながら、npm link的には、上記の2箇所を直接リンクすることはできないわけだ。</p>\n<p>なので、さらに回りくどいが、以下のようにして、解決してみる。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">naoto@MyComputer:~/www/MyBlog$ <span class=\"built_in\">cd</span> ..</span><br><span class=\"line\">naoto@MyComputer:~/www$ ln -s ../repository/hexo-tag-google-photos-album</span><br><span class=\"line\">naoto@MyComputer:~/www$ ls -l hexo-tag-google-photos-album</span><br><span class=\"line\">lrwxrwxrwx 1 naoto naoto 42  5月  6 01:46 hexo-tag-google-photos-album -> ../repository/hexo-tag-google-photos-album</span><br></pre></td></tr></tbody></table></figure>\n<p>こうすることで、開発中のプラグイン実体は従来通りのままとしつつ、link可能な場所にも配置できた。</p>\n<p>呼び出される側のlinkは、以下の通り。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">naoto@MyComputer:~/www$ <span class=\"built_in\">cd</span> hexo-tag-google-photos-album</span><br><span class=\"line\">naoto@MyComputer:~/www/hexo-tag-google-photos-album$ sudo npm link</span><br><span class=\"line\">(snip)</span><br><span class=\"line\">/usr/lib/node_modules/hexo-tag-google-photos-album -> /home/naoto/repository/hexo-tag-google-photos-album</span><br></pre></td></tr></tbody></table></figure>\n<p>そして、呼び出す方で使う側の、つまりブログ側の（しつこい）linkはこの通り。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">naoto@MyComputer:~/www/hexo-tag-google-photos-album$ <span class=\"built_in\">cd</span> ../MyBlog</span><br><span class=\"line\">naoto@MyComputer:~/www/MyBlog$ npm link hexo-tag-google-photos-album</span><br><span class=\"line\">/home/naoto/www/MyBlog/node_modules/hexo-tag-google-photos-album -> /usr/lib/node_modules/hexo-tag-google-photos-album -> /home/naoto/repository/hexo-tag-google-photos-album</span><br><span class=\"line\">naoto@MyComputer:~/www/MyBlog$ grep photos package.json</span><br><span class=\"line\">    <span class=\"string\">\"hexo-tag-google-photos-album\"</span>: <span class=\"string\">\"git+https://github.com/isnot/hexo-tag-google-photos-album.git\"</span>,</span><br><span class=\"line\">naoto@MyComputer:~/www/MyBlog$ ls -l node_modules/hexo-tag-google-photos-album</span><br><span class=\"line\">lrwxrwxrwx 1 naoto naoto 64  5月  6 01:50 node_modules/hexo-tag-google-photos-album -> ../../../../../usr/lib/node_modules/hexo-tag-google-photos-album</span><br></pre></td></tr></tbody></table></figure>\n<p>これで、毎度git pushとnpm upを繰り返すこと無く、作業ができるようになる（はず）。<br>確かめてみよう。</p>\n<p>開発中のプラグインの中に、以下を書き加える。</p>\n<figure class=\"highlight javascript\"><figcaption><span>~/repository/hexo-tag-google-photos-album/index.js</span></figcaption><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> { inspect } = <span class=\"built_in\">require</span>(<span class=\"string\">'util'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"built_in\">Function</span>(<span class=\"string\">'return this'</span>)();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inspect(g, { <span class=\"attr\">depth</span>: <span class=\"number\">0</span> }));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inspect(hexo, { <span class=\"attr\">depth</span>: <span class=\"number\">0</span> }));</span><br></pre></td></tr></tbody></table></figure>\n<p>これを、コミットもせず、コピーもせず、動かしたい。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">naoto@MyComputer:~/www/MyBlog$ hexo list page</span><br><span class=\"line\">Object [global] {</span><br><span class=\"line\">  global: [Circular],</span><br><span class=\"line\">  process: [process],</span><br><span class=\"line\">  Buffer: [Function],</span><br><span class=\"line\">  clearImmediate: [Function: clearImmediate],</span><br><span class=\"line\">  clearInterval: [Function: clearInterval],</span><br><span class=\"line\">  clearTimeout: [Function: clearTimeout],</span><br><span class=\"line\">  setImmediate: [Function],</span><br><span class=\"line\">  setInterval: [Function: setInterval],</span><br><span class=\"line\">  setTimeout: [Function] }</span><br><span class=\"line\">Hexo {</span><br><span class=\"line\">  _events: [Object: null prototype] {},</span><br><span class=\"line\">  _eventsCount: 0,</span><br><span class=\"line\">  _maxListeners: undefined,</span><br><span class=\"line\">  base_dir: <span class=\"string\">'/home/naoto/www/MyBlog/'</span>,</span><br><span class=\"line\">  public_dir: <span class=\"string\">'/home/naoto/www/MyBlog/public/'</span>,</span><br><span class=\"line\">  source_dir: <span class=\"string\">'/home/naoto/www/MyBlog/source/'</span>,</span><br><span class=\"line\">  plugin_dir: <span class=\"string\">'/home/naoto/www/MyBlog/node_modules/'</span>,</span><br><span class=\"line\">  script_dir: <span class=\"string\">'/home/naoto/www/MyBlog/scripts/'</span>,</span><br><span class=\"line\">  scaffold_dir: <span class=\"string\">'/home/naoto/www/MyBlog/scaffolds/'</span>,</span><br><span class=\"line\">  theme_dir: <span class=\"string\">'/home/naoto/www/MyBlog/themes/stage/'</span>,</span><br><span class=\"line\">  theme_script_dir: <span class=\"string\">'/home/naoto/www/MyBlog/themes/stage/scripts/'</span>,</span><br><span class=\"line\">  env: [Object],</span><br><span class=\"line\">  extend: [Object],</span><br><span class=\"line\">  config: [Object],</span><br><span class=\"line\">  <span class=\"built_in\">log</span>: [Logger],</span><br><span class=\"line\">  render: [Render],</span><br><span class=\"line\">  route: [Router],</span><br><span class=\"line\">  post: [Post],</span><br><span class=\"line\">  scaffold: [Scaffold],</span><br><span class=\"line\">  _dbLoaded: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  _isGenerating: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  database: [Database],</span><br><span class=\"line\">  config_path: <span class=\"string\">'/home/naoto/www/MyBlog/_config.yml'</span>,</span><br><span class=\"line\">  <span class=\"built_in\">source</span>: [Source],</span><br><span class=\"line\">  theme: [Theme],</span><br><span class=\"line\">  locals: [Locals] }</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  ---- START COPYING TAG CLOUD FILES ----</span><br><span class=\"line\">INFO  ---- END COPYING TAG CLOUD FILES ----</span><br><span class=\"line\">Date        Title                          Path</span><br><span class=\"line\">2019-04-09  Tags                           tags/index.md</span><br><span class=\"line\">2019-04-13  About いしだなおと / isnot N3  about/index.md</span><br></pre></td></tr></tbody></table></figure>\n<p>できた！</p>\n<p>いいね。これで行こう。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"Hexo 内部探訪 (2) 準備 npm linkメモ","slug":"study-about-hexos-internals-2","date":"2019-05-05T15:02:00.000Z","updated":"2019-05-05T18:40:15.035Z","comments":true,"path":"2019-05/06-study-about-hexos-internals-2/","link":"","permalink":"https://pages.isnot.jp/2019-05/06-study-about-hexos-internals-2/","excerpt":"<div class=\"article-gallery\"><h2 id=\"npm-linkを使いこなすには\"><a href=\"#npm-linkを使いこなすには\" class=\"headerlink\" title=\"npm linkを使いこなすには\"></a>npm linkを使いこなすには</h2><p><a href=\"https://docs.npmjs.com/cli/link.html\" target=\"_blank\" rel=\"noopener\">npm link</a>という、ありがたい仕組みがあって、非公開のモジュール（または開発中のバージョン）を、node_modulesの中に配置することができる。<br>基本的には、シンボリック・リンクである。</p>\n<p>ここまでは、すぐに把握できたけど、実はうまく動作させるための、さらなる条件があった。</p></div>","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"npm","slug":"npm","permalink":"https://pages.isnot.jp/tags/npm/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]},{"raw":"---\ntitle: Hexo 内部探訪 (1) はじめに\ncategories: hexo\ndate: 2019-05-05 23:29:55\ntags: [hexo, javascript]\n---\n\nHexoを選択した理由は、Node.jsだから、Javascriptだから、つまりいろいろと、自身で内部構造を含めて手を加えるため。\nそれは使い始めるとすぐに現実になり、早速プラグインを作成したりもした。（参照 {% post_link hexo-tag-google-photos-album-is-arrived %}）\n\nだんだんとHexoの内部構造やAPIについて理解をしはじめたところです。しかしながら開発においてはまだまだ、暗中模索です。\n\n特に、記事やブログのメタデータや状態などを処理の過程で参照しようと思った時と、jsやcssの挿入（インジェクション）が、掴みにくいポイントだと思う。\n\n<!-- more -->\n\n## インジェクションの方法\n\nはじめに[hexo-inject](https://github.com/hexojs/hexo-inject)を見つけた時、これでかなり楽ができそうだなと思いました。\nしかし実際に使おうと思い、試してみるのですが、思い通りに動かすことができませんでした。\n\n{% blockquote www.npmjs.com https://www.npmjs.com/package/hexo-inject /package/hexo-inject %}\nThis package has been deprecated\nAuthor message:\n\nThe author does not use Hexo any more. This plugin is no longer maintained.\n{% endblockquote %}\n\nとのことで、現段階ではコレに頼るのは諦めました。\nなお、元作者以外のメンテナの動きがあるようなので、少し期待しつつ成り行きを見守っています。\n\n\nで、他のプラグインを（少しだけ）調査したのですが、インジェクションにはまだ定説というかベスト・プラクティスが確立しているようには見えませんでした。\nいくつかアプローチがあるものの、私の望む動作とは少し違っているようです。\nそれというのも、Hexoのプラグイン機構の動作と、うまくマッチしていないように思いました。\n\npostもしくはpageの中で、1回だけ呼び出す限りにおいては、いくつかの手法で（私の実装でも）問題なく動いています。\n\n同じくpostもしくはpageの中で、複数回同じプラグイン（この場合はTagプラグインを想定）が呼び出されたときにどうなるかというと、私の手法ではマズイ部分があります。\n\n探してみると、ランダムな文字列をうまく使って、重複したインジェクションの問題を回避しているプラグインがあることがわかりました。\nそれはそれで良いのですが、私の目的では、単に同一html文書内ではインジェクションが1回だけ、というような動きにしたく思い、引き続き調査中です。\n\nもう一つの問題は、アーカイブもしくはインデックスでの挙動。特にインデックス。\n\n私が使っているテーマ（Stage）だとアーカイブ系（カテゴリー別、タグ別一覧も同様）ではタイトルのみで本文が入らないのでまだ問題になっていないのですが、インデックスではそうもいきません。\n\nここでも、複数回の呼び出しが発生することを想定した作り込みが必要になりますが、私の実装では対応できていません。（不完全だが、1画面内で最初のTagプラグイン記述のみ、動いている）\n\n\nあと、挿入位置も。\nコンテンツの中（body要素の途中）ではなく、head要素の最後とか、body要素の最後に挿入したい。\n\n## 状態の参照\n\nドキュメントの、[API](https://hexo.io/api/)を見ればおおよそは分かります。\nでも、もっと細かい部分を確かめようと思うと、上記のドキュメントでは物足りなさを感じました。\n\n\n私もhexo-tag-google-photos-albumを開発している過程で、その場しのぎ的に調査したのですが、効率的にやれていなかったのと、今後のことを思うと、まとまった形でどこかに書き出しておいたほうがいいなと思いました。\n\nこのあと、Hexoプラグイン開発に役立つよう、hexo-tag-google-photos-albumの開発を題材にとって、それらをまとめていきたいです。\n\n## 他にも、開発の役に立ちそうなこと\n\nまだまだ理解できていないこと。\n\nHexoの一連のライフサイクル。\nそれぞれの段階で、どんな処理が走るのか。\nとか。\n\nそれとテーマ。\n\nあとは、プラグインのロードあたりも、おいおい調べる必要が出てくるかも。\n\nそれと、`npm link`を効果的に使う方法をちゃんと理解しておかないと、開発の効率が悪すぎる……。\n\nそういったことを、連載形式でまとめていけたらと思います。\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><p>Hexoを選択した理由は、Node.jsだから、Javascriptだから、つまりいろいろと、自身で内部構造を含めて手を加えるため。<br>それは使い始めるとすぐに現実になり、早速プラグインを作成したりもした。（参照 <a href=\"/2019-04/30-hexo-tag-google-photos-album-is-arrived/\" title=\"hexo-tag-google-photos-album 公開しました\">hexo-tag-google-photos-album 公開しました</a>）</p>\n<p>だんだんとHexoの内部構造やAPIについて理解をしはじめたところです。しかしながら開発においてはまだまだ、暗中模索です。</p>\n<p>特に、記事やブログのメタデータや状態などを処理の過程で参照しようと思った時と、jsやcssの挿入（インジェクション）が、掴みにくいポイントだと思う。</p>\n<a id=\"more\"></a>\n<h2 id=\"インジェクションの方法\"><a href=\"#インジェクションの方法\" class=\"headerlink\" title=\"インジェクションの方法\"></a>インジェクションの方法</h2><p>はじめに<a href=\"https://github.com/hexojs/hexo-inject\" target=\"_blank\" rel=\"noopener\">hexo-inject</a>を見つけた時、これでかなり楽ができそうだなと思いました。<br>しかし実際に使おうと思い、試してみるのですが、思い通りに動かすことができませんでした。</p>\n<blockquote><p>This package has been deprecated<br>Author message:</p>\n<p>The author does not use Hexo any more. This plugin is no longer maintained.</p>\n<footer><strong>www.npmjs.com</strong><cite><a href=\"https://www.npmjs.com/package/hexo-inject\" target=\"_blank\" rel=\"noopener\">/package/hexo-inject</a></cite></footer></blockquote>\n<p>とのことで、現段階ではコレに頼るのは諦めました。<br>なお、元作者以外のメンテナの動きがあるようなので、少し期待しつつ成り行きを見守っています。</p>\n<p>で、他のプラグインを（少しだけ）調査したのですが、インジェクションにはまだ定説というかベスト・プラクティスが確立しているようには見えませんでした。<br>いくつかアプローチがあるものの、私の望む動作とは少し違っているようです。<br>それというのも、Hexoのプラグイン機構の動作と、うまくマッチしていないように思いました。</p>\n<p>postもしくはpageの中で、1回だけ呼び出す限りにおいては、いくつかの手法で（私の実装でも）問題なく動いています。</p>\n<p>同じくpostもしくはpageの中で、複数回同じプラグイン（この場合はTagプラグインを想定）が呼び出されたときにどうなるかというと、私の手法ではマズイ部分があります。</p>\n<p>探してみると、ランダムな文字列をうまく使って、重複したインジェクションの問題を回避しているプラグインがあることがわかりました。<br>それはそれで良いのですが、私の目的では、単に同一html文書内ではインジェクションが1回だけ、というような動きにしたく思い、引き続き調査中です。</p>\n<p>もう一つの問題は、アーカイブもしくはインデックスでの挙動。特にインデックス。</p>\n<p>私が使っているテーマ（Stage）だとアーカイブ系（カテゴリー別、タグ別一覧も同様）ではタイトルのみで本文が入らないのでまだ問題になっていないのですが、インデックスではそうもいきません。</p>\n<p>ここでも、複数回の呼び出しが発生することを想定した作り込みが必要になりますが、私の実装では対応できていません。（不完全だが、1画面内で最初のTagプラグイン記述のみ、動いている）</p>\n<p>あと、挿入位置も。<br>コンテンツの中（body要素の途中）ではなく、head要素の最後とか、body要素の最後に挿入したい。</p>\n<h2 id=\"状態の参照\"><a href=\"#状態の参照\" class=\"headerlink\" title=\"状態の参照\"></a>状態の参照</h2><p>ドキュメントの、<a href=\"https://hexo.io/api/\" target=\"_blank\" rel=\"noopener\">API</a>を見ればおおよそは分かります。<br>でも、もっと細かい部分を確かめようと思うと、上記のドキュメントでは物足りなさを感じました。</p>\n<p>私もhexo-tag-google-photos-albumを開発している過程で、その場しのぎ的に調査したのですが、効率的にやれていなかったのと、今後のことを思うと、まとまった形でどこかに書き出しておいたほうがいいなと思いました。</p>\n<p>このあと、Hexoプラグイン開発に役立つよう、hexo-tag-google-photos-albumの開発を題材にとって、それらをまとめていきたいです。</p>\n<h2 id=\"他にも、開発の役に立ちそうなこと\"><a href=\"#他にも、開発の役に立ちそうなこと\" class=\"headerlink\" title=\"他にも、開発の役に立ちそうなこと\"></a>他にも、開発の役に立ちそうなこと</h2><p>まだまだ理解できていないこと。</p>\n<p>Hexoの一連のライフサイクル。<br>それぞれの段階で、どんな処理が走るのか。<br>とか。</p>\n<p>それとテーマ。</p>\n<p>あとは、プラグインのロードあたりも、おいおい調べる必要が出てくるかも。</p>\n<p>それと、<code>npm link</code>を効果的に使う方法をちゃんと理解しておかないと、開発の効率が悪すぎる……。</p>\n<p>そういったことを、連載形式でまとめていけたらと思います。</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"Hexo 内部探訪 (1) はじめに","slug":"study-about-hexos-internals-1","date":"2019-05-05T14:29:55.000Z","updated":"2019-05-05T15:37:05.105Z","comments":true,"path":"2019-05/05-study-about-hexos-internals-1/","link":"","permalink":"https://pages.isnot.jp/2019-05/05-study-about-hexos-internals-1/","excerpt":"<div class=\"article-gallery\"><p>Hexoを選択した理由は、Node.jsだから、Javascriptだから、つまりいろいろと、自身で内部構造を含めて手を加えるため。<br>それは使い始めるとすぐに現実になり、早速プラグインを作成したりもした。（参照 <a href=\"/2019-04/30-hexo-tag-google-photos-album-is-arrived/\" title=\"hexo-tag-google-photos-album 公開しました\">hexo-tag-google-photos-album 公開しました</a>）</p>\n<p>だんだんとHexoの内部構造やAPIについて理解をしはじめたところです。しかしながら開発においてはまだまだ、暗中模索です。</p>\n<p>特に、記事やブログのメタデータや状態などを処理の過程で参照しようと思った時と、jsやcssの挿入（インジェクション）が、掴みにくいポイントだと思う。</p></div>","categories":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://pages.isnot.jp/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"https://pages.isnot.jp/tags/javascript/"}]},{"raw":"---\ntitle: ツツジ\ncategories: photo\ndate: 2019-05-01 22:16:43\ntags: photo\n---\n{% googlePhotosAlbum https://photos.app.goo.gl/kXQ4wLkyHXwm6r7HA %}\n","content":"<link crossorigin=\"anonymous\" media=\"screen\" rel=\"stylesheet\" href=\"/css/google_photos_album.css\" /><div class=\"article-gallery\"><div class=\"google-photos-album-area\"><div class=\"metadatas\"><img src=\"https://lh3.googleusercontent.com/cbbekekHcy5oNIWSUnqRcepSFEO9PpjYgYiqy2Jojpsvru6uaSS4boq2hw5ErcLm25CouS0hDwPizVynr6C2aDC5FWtIfo5f0sN9VD-o3zjBAl2DHPKraWpQXh4seihUrTnlKxfVPzk=w600-h315-p-k\" class=\"og-image nolink\"><a href=\"https://photos.google.com/share/AF1QipMdbjXa2yQDxvxPW0AohkV5eHAIYVHpgKdLZbCfPMGJiD7X98s1DcKny0BHpr71iw?key=c1pkQTYxOGtXTEV4TjVsYUMtelRRSUpWQVVKbnBn\" class=\"og-url\" target=\"_blank\" rel=\"noopener\"><span class=\"og-title\">ツツジ</span><span class=\"og-description\">8 new photos added to shared album</span></a></div>\n<div class=\"google-photos-album-images clearfix\"><a href=\"https://lh3.googleusercontent.com/cbbekekHcy5oNIWSUnqRcepSFEO9PpjYgYiqy2Jojpsvru6uaSS4boq2hw5ErcLm25CouS0hDwPizVynr6C2aDC5FWtIfo5f0sN9VD-o3zjBAl2DHPKraWpQXh4seihUrTnlKxfVPzk=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/cbbekekHcy5oNIWSUnqRcepSFEO9PpjYgYiqy2Jojpsvru6uaSS4boq2hw5ErcLm25CouS0hDwPizVynr6C2aDC5FWtIfo5f0sN9VD-o3zjBAl2DHPKraWpQXh4seihUrTnlKxfVPzk=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/XigLNzXANLlEWVc6Vo6celJ4h_lInH9i4vC5Eo5XWVVqUnLd0UaLe3RQffAXecCDLpqag72brmyRig6FV1nLz3__uRYTdsGs1n-jGN_zHxtWTsFnxaKKtUHzjVIiOdHo94dV51zQQg0=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/XigLNzXANLlEWVc6Vo6celJ4h_lInH9i4vC5Eo5XWVVqUnLd0UaLe3RQffAXecCDLpqag72brmyRig6FV1nLz3__uRYTdsGs1n-jGN_zHxtWTsFnxaKKtUHzjVIiOdHo94dV51zQQg0=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/AeoLfJ1VTjx52y6okGpmNH6DucmgiC8D2-3VLSXV49C18MO8sGFoyAOIdjFA_3qDPooRhddnHAVh8aWiWlz4_KlDN4itcamCL9_CYDweO_jg7HOtSotkYKb11cTTAf9NZiz9Sa9oAck=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/AeoLfJ1VTjx52y6okGpmNH6DucmgiC8D2-3VLSXV49C18MO8sGFoyAOIdjFA_3qDPooRhddnHAVh8aWiWlz4_KlDN4itcamCL9_CYDweO_jg7HOtSotkYKb11cTTAf9NZiz9Sa9oAck=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/UuXzKZ295hX2dm8GiAQpUQroT9juuIiqqYQzk7HkPSk0FyDhSgEJfL242rbzaWkMeYyTUM83mfRHSnVHkCgyyvfVmUsuzmFOuW5h5nNkFu74Tqh1y9LzuJi7Chfd4EuMwxpn_FNzWIk=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/UuXzKZ295hX2dm8GiAQpUQroT9juuIiqqYQzk7HkPSk0FyDhSgEJfL242rbzaWkMeYyTUM83mfRHSnVHkCgyyvfVmUsuzmFOuW5h5nNkFu74Tqh1y9LzuJi7Chfd4EuMwxpn_FNzWIk=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/yRwmGV0rKjcf88spJuApw5Ct8COhsyVOtWDHl47VMPXiQAP116_LBNpjUcSSdW7Q1I1fBSRqBDOmmlNE4Bz5qNVa5-4MRKSal8IPs_hGip8TYiMG46NmjP5ky1rAfp4OLttd5rv4hko=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/yRwmGV0rKjcf88spJuApw5Ct8COhsyVOtWDHl47VMPXiQAP116_LBNpjUcSSdW7Q1I1fBSRqBDOmmlNE4Bz5qNVa5-4MRKSal8IPs_hGip8TYiMG46NmjP5ky1rAfp4OLttd5rv4hko=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/JlQDZHtdrk7UiMmbjw0LGb-P1e_2CXYo9fWnPnbTxPu44vhHA7VRDzQxAjjc_DussghnswuOcOp_u8c4m9sxHg1Or2gVsNJOH2R6Kg1p1ef7ThkJ1cWapwjaQKyX24Np2H-H79zCP3c=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/JlQDZHtdrk7UiMmbjw0LGb-P1e_2CXYo9fWnPnbTxPu44vhHA7VRDzQxAjjc_DussghnswuOcOp_u8c4m9sxHg1Or2gVsNJOH2R6Kg1p1ef7ThkJ1cWapwjaQKyX24Np2H-H79zCP3c=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/pT4awqpjsjV_h4Sc2mawIUaRGHYzgejg1TvLlwsfpLxmvD9TJ2NN5bxnQZvu6xQwIuAXU6Z_hg_idxwm-p7cN2yqF15i7twIQ2g3dypz29zWfxAyFQG1o6wph8hjlYB7948jGG7qWIY=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/pT4awqpjsjV_h4Sc2mawIUaRGHYzgejg1TvLlwsfpLxmvD9TJ2NN5bxnQZvu6xQwIuAXU6Z_hg_idxwm-p7cN2yqF15i7twIQ2g3dypz29zWfxAyFQG1o6wph8hjlYB7948jGG7qWIY=w225-no\"></a>\n<a href=\"https://lh3.googleusercontent.com/qs7O5vM49M4Nax5gwAbx7D7Mxnh_I2VS2oHaOofxSIOjwqCDOERJURR8UblBxiY1_xHgs3k-BSfO-tIzdevK88IjNAO-maJJmIRYbd4g0DzLl1nu3gW-v68mQIAIZbzwg-0KmRo9_Ok=s720-no\" class=\"gallery-item\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/qs7O5vM49M4Nax5gwAbx7D7Mxnh_I2VS2oHaOofxSIOjwqCDOERJURR8UblBxiY1_xHgs3k-BSfO-tIzdevK88IjNAO-maJJmIRYbd4g0DzLl1nu3gW-v68mQIAIZbzwg-0KmRo9_Ok=w225-no\"></a></div>\n</div>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script src=\"/js/lg-thumbnail.min.js\"></script><script src=\"/js/lg-zoom.min.js\"></script><script src=\"/js/lg-autoplay.min.js\"></script><script src=\"/js/lg-fullscreen.min.js\"></script><script src=\"/js/lg-pager.min.js\"></script><script src=\"/js/lg-hash.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('article-gallery')[0], options);\n        }</script><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script><script>\nfunction addLoadEvent(func) {\n  const oldonload = window.onload;\n  if (typeof window.onload !== 'function') {\n    window.onload = func;\n  } else {\n    window.onload = () => {\n      oldonload();\n      func();\n    };\n  }\n}\n  addLoadEvent(() => {\n    try {\n      if (window.innerWidth < Number('768')) {\n        return;\n      }\n      let imgs = Array.from(document.body.querySelectorAll('.google-photos-album-images a'));\n      imgs.push(...Array.from(document.body.querySelectorAll('a.google-photos-album-image')));\n      for (let anchor of imgs) {\n        anchor.href = anchor.href.replace(/=s720\\-no/i, '=s1920-no');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  });\n</script>\n","title":"ツツジ","slug":"azalea","date":"2019-05-01T13:16:43.000Z","updated":"2019-05-01T13:18:46.876Z","comments":true,"path":"2019-05/01-azalea/","link":"","permalink":"https://pages.isnot.jp/2019-05/01-azalea/","excerpt":"","categories":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/categories/photo/"}],"tags":[{"name":"photo","slug":"photo","permalink":"https://pages.isnot.jp/tags/photo/"}]}]